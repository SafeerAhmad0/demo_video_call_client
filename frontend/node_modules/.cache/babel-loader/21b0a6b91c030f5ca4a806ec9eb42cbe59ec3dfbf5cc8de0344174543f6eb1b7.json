{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authAPI,setAuthToken,setUser,getAuthToken,getUser}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUserState]=useState(null);const[isLoading,setIsLoading]=useState(true);useEffect(()=>{// Check if user is already logged in on app start\nconst initializeAuth=async()=>{try{const token=getAuthToken();const savedUser=getUser();if(token&&savedUser){setUserState(savedUser);}}catch(error){console.error('Error initializing auth:',error);// Clear invalid tokens\nlocalStorage.removeItem('access_token');localStorage.removeItem('user');}finally{setIsLoading(false);}};initializeAuth();},[]);const login=async(email,password)=>{try{setIsLoading(true);console.log('Attempting login with:',{email});const response=await authAPI.login(email,password);console.log('Login response received:',response);// Store token and user data\nsetAuthToken(response.access_token);setUser(response.user);setUserState(response.user);console.log('Login successful, user stored:',response.user);}catch(error){console.error('Login error details:',error);console.error('Login error message:',error instanceof Error?error.message:'Unknown error');throw error;}finally{setIsLoading(false);}};const register=async(email,password)=>{try{setIsLoading(true);console.log('Attempting registration with:',{email});const response=await authAPI.register(email,password);console.log('Registration response received:',response);// Store token and user data\nsetAuthToken(response.access_token);setUser(response.user);setUserState(response.user);console.log('Registration successful, user stored:',response.user);}catch(error){console.error('Registration error details:',error);console.error('Registration error message:',error instanceof Error?error.message:'Unknown error');throw error;}finally{setIsLoading(false);}};const logout=async()=>{try{setIsLoading(true);await authAPI.logout();}catch(error){console.error('Logout error:',error);}finally{// Clear local state regardless of API call success\nlocalStorage.removeItem('access_token');localStorage.removeItem('user');setUserState(null);setIsLoading(false);}};const value={user,isAuthenticated:!!user,isLoading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","setAuthToken","setUser","getAuthToken","getUser","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUserState","isLoading","setIsLoading","initializeAuth","token","savedUser","error","console","localStorage","removeItem","login","email","password","log","response","access_token","message","register","logout","value","isAuthenticated","Provider"],"sources":["C:/Users/samee/OneDrive/Desktop/Testing_Video_App/verifycall-app_v5_240825/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { User, authAPI, setAuthToken, setUser, getAuthToken, getUser } from '../services/api';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  register: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [user, setUserState] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in on app start\r\n    const initializeAuth = async () => {\r\n      try {\r\n        const token = getAuthToken();\r\n        const savedUser = getUser();\r\n        \r\n        if (token && savedUser) {\r\n          setUserState(savedUser);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error initializing auth:', error);\r\n        // Clear invalid tokens\r\n        localStorage.removeItem('access_token');\r\n        localStorage.removeItem('user');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('Attempting login with:', { email });\r\n      const response = await authAPI.login(email, password);\r\n      console.log('Login response received:', response);\r\n      \r\n      // Store token and user data\r\n      setAuthToken(response.access_token);\r\n      setUser(response.user);\r\n      setUserState(response.user);\r\n      console.log('Login successful, user stored:', response.user);\r\n    } catch (error) {\r\n      console.error('Login error details:', error);\r\n      console.error('Login error message:', error instanceof Error ? error.message : 'Unknown error');\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (email: string, password: string): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      console.log('Attempting registration with:', { email });\r\n      const response = await authAPI.register(email, password);\r\n      console.log('Registration response received:', response);\r\n      \r\n      // Store token and user data\r\n      setAuthToken(response.access_token);\r\n      setUser(response.user);\r\n      setUserState(response.user);\r\n      console.log('Registration successful, user stored:', response.user);\r\n    } catch (error) {\r\n      console.error('Registration error details:', error);\r\n      console.error('Registration error message:', error instanceof Error ? error.message : 'Unknown error');\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async (): Promise<void> => {\r\n    try {\r\n      setIsLoading(true);\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      // Clear local state regardless of API call success\r\n      localStorage.removeItem('access_token');\r\n      localStorage.removeItem('user');\r\n      setUserState(null);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated: !!user,\r\n    isLoading,\r\n    login,\r\n    register,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}